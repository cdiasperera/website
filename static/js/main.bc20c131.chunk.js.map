{"version":3,"sources":["hoc/Layout/Layout.module.css","components/Footer/Footer.module.css","components/Links/Links.module.css","documents/resume.pdf","components/ReturnHomeButton/ReturnHomeButton.module.css","components/Header/Header.module.css","components/NavLink/NavLink.module.css","pages/AboutMe/AboutMe.module.css","pages/Resume/Resume.module.css","hoc/Post/Post.module.css","components/HorizontalRules/HorizontalRule.module.css","documents/report.pdf","images/introToCST2.png","pages/IntroToCSProj/IntroToCSProj.module.css","images/yelpcamp.png","pages/YelpCamp/YelpCamp.module.css","components/Footer/index.js","components/ReturnHomeButton/index.js","hoc/Layout/index.js","components/Header/index.js","components/NavLink/index.js","components/Links/index.js","pages/Landing/index.js","pages/AboutMe/index.js","pages/Resume/index.js","components/HorizontalRules/index.js","hoc/Post/index.js","pages/IntroToCSProj/index.js","pages/YelpCamp/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","styles","Category","to","href","ReturnHomeButton","Layout","children","navHomeButton","console","log","returnHome","page","content","Header","NavLink","name","dest","Links","list","Landing","AboutMe","Resume","src","resume","title","width","height","HorizontalRule","class","Page","IntroToCSProj","Post","report","T2Trend","t2Graph","alt","YelpCamp","YelpCampImg","yelpcamp","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bc20c131.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Layout_page__VQ38f\",\"content\":\"Layout_content__1QeJi\",\"footer\":\"Layout_footer__1iQBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__238hM\",\"Category\":\"Footer_Category__1eRF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Links\":\"Links_Links__1f83j\",\"list\":\"Links_list__2Bjvi\"};","module.exports = __webpack_public_path__ + \"static/media/resume.0bf537ee.pdf\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReturnHomeButton\":\"ReturnHomeButton_ReturnHomeButton__12xgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"NavLink_NavLink__xstp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutMe\":\"AboutMe_AboutMe__3_7I6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Resume\":\"Resume_Resume__1smug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"Post_Page__2iAyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HorizontalRule\":\"HorizontalRule_HorizontalRule__3F6yk\"};","module.exports = __webpack_public_path__ + \"static/media/report.6b26945a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/introToCST2.91ae4948.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IntroToCSProj\":\"IntroToCSProj_IntroToCSProj__2A7zp\",\"T2Trend\":\"IntroToCSProj_T2Trend__1SUag\"};","module.exports = __webpack_public_path__ + \"static/media/yelpcamp.9093f7e9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YelpCampImg\":\"YelpCamp_YelpCampImg__1bEbi\"};","import React from 'react'\n\n// COMPONENTS\nimport { Link } from 'react-router-dom'\n\n// STYLES\nimport styles from './Footer.module.css'\n\n\nconst Footer = () => {\n  return (\n    <div className={styles.Footer}>\n      <ul>\n        <span className={styles.Category}>Links</span>\n        <li><Link to='/resume'> Resume </Link></li>\n        <li><Link to='/about-me'>About Me</Link></li>\n        <li><a href='https://github.com/cdiasperera/website'>Source</a></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\n// COMPONENTS\nimport { Link } from 'react-router-dom'\n\n// STYLES\nimport styles from './ReturnHomeButton.module.css'\n\nconst ReturnHomeButton = () => {\n  return (\n    <Link to='/' className={styles.ReturnHomeButton}> &lt;  Home</Link>\n  )\n}\n\nexport default ReturnHomeButton\n","import React from 'react'\n\n// STYLES\nimport styles from './Layout.module.css'\n\n// COMPONENTS\nimport Footer from '../../components/Footer'\nimport ReturnHomeButton from '../../components/ReturnHomeButton'\n\nconst Layout = ({ children, navHomeButton }) => {\n  console.log('Why hello there. What brings you to this part of town?')\n  let returnHome = null\n\n  if (navHomeButton) {\n    returnHome = <ReturnHomeButton />\n  }\n  return (\n    <div className={styles.page}>\n      {returnHome}\n      <div className={styles.content}>\n        {children}\n      </div>\n      <footer>\n        <Footer />\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\n\n// STYLES\nimport styles from './Header.module.css'\n\nconst Header = () => {\n  return (\n    <div className={styles.Header}>\n      <h1>Channa</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\n// COMPONENTS\nimport { Link } from 'react-router-dom'\n\n// STYLES\nimport styles from './NavLink.module.css'\n\nconst NavLink = ({ name, dest }) => {\n  return (\n    <div className={styles.NavLink}>\n      <Link to={dest}> {name}</Link>\n    </div>\n  )\n}\n\nexport default NavLink\n","import React from 'react'\n\n// COMPONENTS\nimport NavLink from '../NavLink'\n\n// STYLES\nimport styles from './Links.module.css'\n\nconst Links = () => {\n  return (\n    <div className={styles.Links}>\n      <h1>Links</h1>\n      <div className={styles.list}>\n        <NavLink name='A solution for the Partition Problem, via a genetic algorithm' dest='/intro-to-cs-project' />\n        <NavLink name='My first website: Yelpcamp' dest='/my-first-website' />\n      </div>\n    </div>\n  )\n}\n\nexport default Links\n","import React from 'react'\n\n// COMPONENTS\nimport Layout from '../../hoc/Layout'\nimport Header from '../../components/Header'\nimport Links from '../../components/Links'\n\nconst Landing = () => {\n  return (\n    <>\n      <Layout>\n        <Header />\n        <Links />\n      </Layout>\n    </>\n  )\n}\n\nexport default Landing\n","import React from 'react'\n\n// COMPONENTS\nimport Layout from '../../hoc/Layout'\n\n// STYLES\nimport styles from './AboutMe.module.css'\n\nconst AboutMe = () => {\n  return (\n    <Layout navHomeButton>\n      <div className={styles.AboutMe}>\n        <h1> About Me</h1>\n        <p>\n          Hi! I'm a computer science student, currently studying at\n          the University of Groningen, in the Netherlands . I'm currently in my\n          first year, expecting to graduate in July, 2023.\n        </p>\n        <p>\n          My research interests are somewhat broad, at this early stage of my\n          studies. That said, I'm particularly interested in:\n        </p>\n        <ul>\n          <li>Context-aware AI</li>\n          <li>Discrete mathematics</li>\n          <li>Computer architecture</li>\n          <li>Fundamental computing</li>\n        </ul>\n        <p>I also like rock climbing quite a bit!</p>\n      </div>\n    </Layout>\n  )\n}\n\nexport default AboutMe\n","import React from 'react'\n\n// RESOURCES\nimport resume from '../../documents/resume.pdf'\n\n// COMPONENTS\nimport Layout from '../../hoc/Layout'\n\n// STYLES\nimport styles from './Resume.module.css'\n\nconst Resume = () => {\n  return (\n    <Layout navHomeButton>\n      <div className={styles.Resume}>\n        <h1> Resume</h1>\n        <iframe\n          src={resume}\n          title='Resume'\n          width='100%'\n          height='800px'\n        />\n        <p>\n          <a href={resume}> Download resume</a>\n        </p>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Resume\n","import React from 'react'\n\nimport styles from './HorizontalRule.module.css'\n\nlet HorizontalRule = () => {\n  return (\n    <div class={styles.HorizontalRule}>\n      <hr />\n    </div>\n  )\n}\n\nexport default HorizontalRule\n","import React from 'react'\nimport Layout from '../Layout'\n\nimport styles from './Post.module.css'\nimport HorizontalRule from '../../components/HorizontalRules'\n\nconst Page = ({children}) => {\n  return (\n    <Layout navHomeButton>\n      <div className={styles.Page}>\n        {children}\n        <HorizontalRule />\n      </div>\n    </Layout>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport Post from '../../hoc/Post'\n// External files\nimport report from '../../documents/report.pdf'\nimport t2Graph from '../../images/introToCST2.png'\n\nimport styles from './IntroToCSProj.module.css'\n\nconst IntroToCSProj = () => {\n  return (\n    <Post>\n      <h1>A solution for the Partition Problem, via a genetic algorithm</h1>\n      <h2> Introduction </h2>\n      <p>\n        During my first year at the Rijksuniversiteit Groningen (the\n        University of Groningen), I was given a selection of small and short\n        projects to implement with a project parter (the lovely Ola\n        Dybvadskog).\n      </p>\n      <p>\n          A particularly interesting project involved solving an <b>NP </b>\n          problem via a genetic algorithm. For those unaware, a genetic\n          algorithm tries to find a solution via a simulation of\n        <i> evolution </i>, where the organisms that evolve are \"solutions\" to the problem.\n          In principle, better solutions should naturally arise\n          and given that there's a \"correct solution\" for this problem, over a\n          long enough iteration period, we should reach the correct solution.\n      </p>\n\n      <p>\n          The problem itself was the <b>(multi)set partition problem </b>, which\n          involved  creating two disjoint sets from the original set, such\n          that their sums are the same. A good analogy would be to imagine the\n          original set as a collection of wooden cubes of different lengths. The goal\n          is to create two piles of cubes, such that when you stack up each\n          pile, their heights are the same.\n      </p>\n\n      <h2>The project and some analysis</h2>\n      <p>\n            Below is a link to the github repository storing the code and\n            instructions on how to use the program. I've also included a link to\n            the report I wrote on the project.\n      </p>\n      <p>\n        <a href='https://github.com/cdiasperera/GeneticPartitionProblem'>\n              Project Source\n        </a>\n      </p>\n      <p>\n        <a href={report}> Download report</a>\n      </p>\n\n      <p>\n        The bulk of the code revolves around writing functions to simulate\n        various aspects of evolution. Me and Ola felt this was a simple enough\n        project to implement in C, though maybe it might have benefitted from\n        being implemented in some OOP langauge.\n      </p>\n\n      <p>\n        Writing the functions were simple enough, and it took only a few days.\n        Really, the trouble involved finding the best set of parameters for\n        those functions, so it doesn't take too long to find a solution. And that\n        took multiple weeks worth of work.\n      </p>\n\n      <p>\n        Unfortunately, a lot of our analysis (to find those parameters) was somewhat rotten when we realized\n        that our program fails spectacularly on difficult original sets. We were\n        checking how fast our program came to a conclusion, without really knowing\n        if we had the correct solution. We had to scrap a lot of code (most of which\n        can be found in the history of <code>testing.c</code>).\n      </p>\n\n      <p>\n        Still, while we couldn't exactly find the optimal set of parameters for our simulation,\n        we were able to measure the performance of our program. The core performance parameter being\n        \"How often do we get a correct answer\". Remember, as our program is probabilistic, there's no guarantee\n        that we would arrive at a correct solution.\n      </p>\n\n      <p>\n          Well, that all depends on the answer to the question: \"<i>How long do we let our solution   evolve </i>\".\n          Indeed, we can graph how accurate program was, against this parameter:\n        <div class={styles.T2Trend}>\n          <img\n            src={t2Graph}\n            alt='How our program performs as t_2 increases'\n          />\n        </div>\n      </p>\n\n      <p>\n            It's worth noting that we can't really <i>know</i> the solution when\n            checking the accuracy of our algorithm. Rather, we can only really\n            know its consistency. However, we really only want to know the\n            consistency of the best solution, which is what <code>Percentage Similarity</code>\n            tracks.\n      </p>\n\n      <p>\n            We can see that initially, the solution improves linearly, the\n            longer we let the simulation run. However, at a certain point, it\n            starts to behave logarithmcally.\n      </p>\n\n      <h2>Conclusions</h2>\n      <p>\n            I'm relatively happy with the project, though I am disappointed with\n            the analysis of it. I couldn't really find a way to find the best\n            parameters for the configuration. At least, not in a way that would\n            have allowed us to complete the project in time.\n      </p>\n\n      <p>\n            It also takes multiple seconds to run. Some of the input cases could\n            be optimized, but it doesn't sit right with me for it to take so\n            long, for a relatively tiny input set size.\n      </p>\n\n      <p>\n            That said, the improvements I could make to the project are probably\n            not worth the investment, which could be put into more effective\n            places so I'm willing to say that the project is <b> done </b>.\n      </p>\n\n    </Post>\n  )\n}\n\nexport default IntroToCSProj\n","import React from 'react'\nimport Post from '../../hoc/Post'\n\nimport yelpcamp from '../../images/yelpcamp.png'\n\nimport styles from './YelpCamp.module.css'\n\nconst YelpCamp = () => {\n  return (\n    <Post>\n      <h1> My first website: YelpCamp</h1>\n      <p>\n        Yonks ago, back before I even starting programming seriously, I made a\n        simply CRUD website, following a course on <a href='https://www.udemy.com/course/the-web-developer-bootcamp/'> Udemy </a>.\n        It was a Yelp-clone for camping sites around the United States, with an\n        added social-media element to it. I called it <a href='http://yelpcampcdp.herokuapp.com/'>YelpCamp</a> (surprise surprise).\n      </p>\n\n      <p>\n        It was actually a pretty tough project for me at the time. I had some\n        cursory programming knowledge, but I knew nothing of web development,\n        not even HTML. It's honestly quite difficult to list exactly what I had\n        learned, just because I had to learn so much.\n      </p>\n\n      <img className={styles.YelpCampImg} src={yelpcamp} alt='Yelpcamp homepage' />\n\n      <p>\n        Even going beyond the langauges and the frameworks, learning about\n        authorization and authentication, design, testing, and even a bit of web\n        scapring, really dragged out the project. For such a simple website,\n        there was a lot of work put into it.\n      </p>\n\n      <p>\n        It's not the most inspired idea, nor is it a particularly pretty\n        website. But I do think it's a pretty decent first effort.\n      </p>\n\n      <p>\n        P.S: The website is up and running, but it might be \"sleeping\" as its\n        hosted on Heroku. It might take 5 to 10 seconds to initially load.\n        Also, there's probably some security flaws in it, so don't use any\n        contact information you wouldn't want to be leaked.\n      </p>\n    </Post>\n  )\n}\n\nexport default YelpCamp\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\n// COMPONENTS\nimport Landing from './pages/Landing'\nimport AboutMe from './pages/AboutMe'\nimport Resume from './pages/Resume'\nimport IntroToCSProj from './pages/IntroToCSProj'\nimport YelpCamp from './pages/YelpCamp'\n\nfunction App () {\n  return (\n    <>\n      <Route path='/' exact component={Landing} />\n      <Route path='/about-me' exact component={AboutMe} />\n      <Route path='/resume' exact component={Resume} />\n      <Route path='/intro-to-cs-project' exact component={IntroToCSProj} />\n      <Route path='/my-first-website' exact component={YelpCamp} />\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\n\n// COMPONENTS\nimport App from './App'\n\n// STYLES\nimport './index.css'\n\n// MISC\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=''>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}